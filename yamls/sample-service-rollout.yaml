apiVersion: v1
data:
  mysql-password: cGFzc3dvcmQ=
  mysql-root-password: cGFzc3dvcmQ=
  mysql-user: cm9vdA==
kind: Secret
metadata:
  name: db-credentials
  namespace: icsdevuser
type: Opaque
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: mysql-pv-volume
  labels:
    type: local
spec:
  storageClassName: manual
  capacity:
    storage: 2Gi
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: "/mnt/data"
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mysql-pv-data
spec:
  storageClassName: manual
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 2Gi
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: db-conf
data:
 host: mysql
 name: sample
---
apiVersion: v1
kind: Service
metadata:
  name: mysql
spec:
  ports:
  - port: 3306
  selector:
    app: mysql
  clusterIP: None
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mysql
spec:
  selector:
    matchLabels:
      app: mysql
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: mysql
    spec:
      containers:
      - image: mysql:5.6
        name: mysql
        env:
        - name: MYSQL_ROOT_PASSWORD
          valueFrom:
              secretKeyRef:
                 name: db-credentials
                 key: mysql-root-password
        - name: MYSQL_USER
          valueFrom:
              secretKeyRef:
                 name: db-credentials
                 key: mysql-user
        - name: MYSQL_PASSWORD
          valueFrom:
              secretKeyRef:
                 name: db-credentials
                 key: mysql-password
        - name: MYSQL_DATABASE
          value: sample
        ports:
        - containerPort: 3306
          name: mysql
        volumeMounts:
        - name: mysql-persistent-storage
          mountPath: /var/lib/mysql
      volumes:
      - name: mysql-persistent-storage
        persistentVolumeClaim:
          claimName: mysql-pv-data
---
apiVersion: v1
kind: Service
metadata:
  name: sample-service-stable
  labels:
    name: springboot-k8s-mysql
spec:
  ports:
    - nodePort: 30163
      port: 8080
      targetPort: 8080
      protocol: TCP
  selector:
    app: springboot-k8s-mysql
  type: NodePort
---
apiVersion: v1
kind: Service
metadata:
  name: session-service-canary
  labels:
    name: springboot-k8s-mysql
spec:
  ports:
    - nodePort: 30164
      port: 8080
      targetPort: 8080
      protocol: TCP
  selector:
    app: springboot-k8s-mysql
  type: NodePort
---
apiVersion: argoproj.io/v1alpha1
kind: Rollout
metadata:
  name: sample-serivce-mysql-canary-rollout
spec:
  replicas: 3
  revisionHistoryLimit: 2
  selector:
    matchLabels:
      app: springboot-k8s-mysql
  template:
    metadata:
      labels:
        app: springboot-k8s-mysql
    spec:
      containers:
        - name: springboot-k8s-mysql
          image: atulgupta2593/sample-service-mysql:v4
          imagePullPolicy: Always
          ports:
            - containerPort: 8080
---
